<?php

/**
 * @file
 * Password protects any Brightcove video player when secured with a password.
 */

use Drupal\Core\Form\FormState;

/**
 * Implements hook_theme().
 */
function brightcove_passwords_theme($existing, $type, $theme, $path) {
  return [
    'brightcove_video_player_authform' => [
      'variables' => ['form' => NULL],
    ],
  ];
}

/**
 * Implements hook_preprocess_hook().
 */
function brightcove_passwords_preprocess_brightcove_video_player(array &$variables, $hook) {

}

/**
 * Implements hook_theme_suggestions_hook_alter().
 */
function brightcove_passwords_theme_suggestions_brightcove_video_player_alter(array &$suggestions, array &$variables) {

  // First we need to grab the brightcove_video entity ID
  // based on the video_id property.
  $video = \Drupal::entityQuery('brightcove_video')
    ->condition('video_id', $variables['video_id'])
    ->execute();
  $videoID = array_values($video)[0];

  // Load the entity now that we have the entity's ID.
  $storage = \Drupal::service('entity_type.manager')->getStorage('brightcove_video');
  $brightcoveVideo = $storage->load($videoID);
  $customFieldValues = $brightcoveVideo->getCustomFieldValues();

  if (isset($customFieldValues['password'])) {
    $session = \Drupal::request()->getSession();

    // Check to see if user has authenticated successfully for this video.
    $session_auth = $session->get('brightcove.passwords.' . $videoID);

    if (!isset($session_auth)) {
      // If they haven't authenticated, we need to display a password form.
      // $form = \Drupal::formBuilder()->getForm('Drupal\brightcove_passwords\Form\BrightcovePlayerAuthForm');
      $form_state = new FormState();
      $form_state->set('videoid', $videoID);
      $form_state->set('password', $customFieldValues['password']);

      $form = \Drupal::formBuilder()->buildForm('Drupal\brightcove_passwords\Form\BrightcovePlayerAuthForm', $form_state);

      $suggestions = ['brightcove_video_player_authform'];
      $variables['form'] = $form;
    }
  }

}
